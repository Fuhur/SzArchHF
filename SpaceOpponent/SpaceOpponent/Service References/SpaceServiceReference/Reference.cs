//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SpaceOpponent.SpaceServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="HighScoreDTO", Namespace="http://schemas.datacontract.org/2004/07/SpaceService.Model.DTO")]
    [System.SerializableAttribute()]
    public partial class HighScoreDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ScoreField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Score {
            get {
                return this.ScoreField;
            }
            set {
                if ((this.ScoreField.Equals(value) != true)) {
                    this.ScoreField = value;
                    this.RaisePropertyChanged("Score");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StartMultiplayerResponse", Namespace="http://schemas.datacontract.org/2004/07/SpaceService.Model.DTO")]
    [System.SerializableAttribute()]
    public partial class StartMultiplayerResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LevelLengthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LevelSeedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ReadyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long StartTimeStampField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LevelLength {
            get {
                return this.LevelLengthField;
            }
            set {
                if ((this.LevelLengthField.Equals(value) != true)) {
                    this.LevelLengthField = value;
                    this.RaisePropertyChanged("LevelLength");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LevelSeed {
            get {
                return this.LevelSeedField;
            }
            set {
                if ((this.LevelSeedField.Equals(value) != true)) {
                    this.LevelSeedField = value;
                    this.RaisePropertyChanged("LevelSeed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Ready {
            get {
                return this.ReadyField;
            }
            set {
                if ((this.ReadyField.Equals(value) != true)) {
                    this.ReadyField = value;
                    this.RaisePropertyChanged("Ready");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long StartTimeStamp {
            get {
                return this.StartTimeStampField;
            }
            set {
                if ((this.StartTimeStampField.Equals(value) != true)) {
                    this.StartTimeStampField = value;
                    this.RaisePropertyChanged("StartTimeStamp");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Vector", Namespace="http://schemas.datacontract.org/2004/07/SpaceService.Model")]
    [System.SerializableAttribute()]
    public partial class Vector : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float XField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float YField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float X {
            get {
                return this.XField;
            }
            set {
                if ((this.XField.Equals(value) != true)) {
                    this.XField = value;
                    this.RaisePropertyChanged("X");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float Y {
            get {
                return this.YField;
            }
            set {
                if ((this.YField.Equals(value) != true)) {
                    this.YField = value;
                    this.RaisePropertyChanged("Y");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TickResponse", Namespace="http://schemas.datacontract.org/2004/07/SpaceService.Model.DTO")]
    [System.SerializableAttribute()]
    public partial class TickResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SpaceOpponent.SpaceServiceReference.Vector OpponentPositionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SpaceOpponent.SpaceServiceReference.Vector OpponentVelocityField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SpaceOpponent.SpaceServiceReference.Vector OpponentPosition {
            get {
                return this.OpponentPositionField;
            }
            set {
                if ((object.ReferenceEquals(this.OpponentPositionField, value) != true)) {
                    this.OpponentPositionField = value;
                    this.RaisePropertyChanged("OpponentPosition");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SpaceOpponent.SpaceServiceReference.Vector OpponentVelocity {
            get {
                return this.OpponentVelocityField;
            }
            set {
                if ((object.ReferenceEquals(this.OpponentVelocityField, value) != true)) {
                    this.OpponentVelocityField = value;
                    this.RaisePropertyChanged("OpponentVelocity");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Match", Namespace="http://schemas.datacontract.org/2004/07/SpaceService.Model")]
    [System.SerializableAttribute()]
    public partial class Match : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LevelLengthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LevelSeedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SpaceOpponent.SpaceServiceReference.PlayerState[] PlayerStatesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long StartTimeStampField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LevelLength {
            get {
                return this.LevelLengthField;
            }
            set {
                if ((this.LevelLengthField.Equals(value) != true)) {
                    this.LevelLengthField = value;
                    this.RaisePropertyChanged("LevelLength");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LevelSeed {
            get {
                return this.LevelSeedField;
            }
            set {
                if ((this.LevelSeedField.Equals(value) != true)) {
                    this.LevelSeedField = value;
                    this.RaisePropertyChanged("LevelSeed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SpaceOpponent.SpaceServiceReference.PlayerState[] PlayerStates {
            get {
                return this.PlayerStatesField;
            }
            set {
                if ((object.ReferenceEquals(this.PlayerStatesField, value) != true)) {
                    this.PlayerStatesField = value;
                    this.RaisePropertyChanged("PlayerStates");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long StartTimeStamp {
            get {
                return this.StartTimeStampField;
            }
            set {
                if ((this.StartTimeStampField.Equals(value) != true)) {
                    this.StartTimeStampField = value;
                    this.RaisePropertyChanged("StartTimeStamp");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PlayerState", Namespace="http://schemas.datacontract.org/2004/07/SpaceService.Model")]
    [System.SerializableAttribute()]
    public partial class PlayerState : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool FinishedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SpaceOpponent.SpaceServiceReference.Player PlayerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SpaceOpponent.SpaceServiceReference.Vector PositionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ResultRequestedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ScoreField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SpaceOpponent.SpaceServiceReference.Vector VelocityField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Finished {
            get {
                return this.FinishedField;
            }
            set {
                if ((this.FinishedField.Equals(value) != true)) {
                    this.FinishedField = value;
                    this.RaisePropertyChanged("Finished");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SpaceOpponent.SpaceServiceReference.Player Player {
            get {
                return this.PlayerField;
            }
            set {
                if ((object.ReferenceEquals(this.PlayerField, value) != true)) {
                    this.PlayerField = value;
                    this.RaisePropertyChanged("Player");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SpaceOpponent.SpaceServiceReference.Vector Position {
            get {
                return this.PositionField;
            }
            set {
                if ((object.ReferenceEquals(this.PositionField, value) != true)) {
                    this.PositionField = value;
                    this.RaisePropertyChanged("Position");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ResultRequested {
            get {
                return this.ResultRequestedField;
            }
            set {
                if ((this.ResultRequestedField.Equals(value) != true)) {
                    this.ResultRequestedField = value;
                    this.RaisePropertyChanged("ResultRequested");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Score {
            get {
                return this.ScoreField;
            }
            set {
                if ((this.ScoreField.Equals(value) != true)) {
                    this.ScoreField = value;
                    this.RaisePropertyChanged("Score");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SpaceOpponent.SpaceServiceReference.Vector Velocity {
            get {
                return this.VelocityField;
            }
            set {
                if ((object.ReferenceEquals(this.VelocityField, value) != true)) {
                    this.VelocityField = value;
                    this.RaisePropertyChanged("Velocity");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Player", Namespace="http://schemas.datacontract.org/2004/07/SpaceService.Model")]
    [System.SerializableAttribute()]
    public partial class Player : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DeviceIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> HighScoreField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DeviceId {
            get {
                return this.DeviceIdField;
            }
            set {
                if ((object.ReferenceEquals(this.DeviceIdField, value) != true)) {
                    this.DeviceIdField = value;
                    this.RaisePropertyChanged("DeviceId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> HighScore {
            get {
                return this.HighScoreField;
            }
            set {
                if ((this.HighScoreField.Equals(value) != true)) {
                    this.HighScoreField = value;
                    this.RaisePropertyChanged("HighScore");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SpaceServiceReference.ISpaceService")]
    public interface ISpaceService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISpaceService/SetName", ReplyAction="http://tempuri.org/ISpaceService/SetNameResponse")]
        void SetName(string deviceId, string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISpaceService/SetName", ReplyAction="http://tempuri.org/ISpaceService/SetNameResponse")]
        System.Threading.Tasks.Task SetNameAsync(string deviceId, string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISpaceService/UploadHighScore", ReplyAction="http://tempuri.org/ISpaceService/UploadHighScoreResponse")]
        void UploadHighScore(string deviceId, int score);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISpaceService/UploadHighScore", ReplyAction="http://tempuri.org/ISpaceService/UploadHighScoreResponse")]
        System.Threading.Tasks.Task UploadHighScoreAsync(string deviceId, int score);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISpaceService/HighScores", ReplyAction="http://tempuri.org/ISpaceService/HighScoresResponse")]
        SpaceOpponent.SpaceServiceReference.HighScoreDTO[] HighScores();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISpaceService/HighScores", ReplyAction="http://tempuri.org/ISpaceService/HighScoresResponse")]
        System.Threading.Tasks.Task<SpaceOpponent.SpaceServiceReference.HighScoreDTO[]> HighScoresAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISpaceService/StartMultiplayer", ReplyAction="http://tempuri.org/ISpaceService/StartMultiplayerResponse")]
        SpaceOpponent.SpaceServiceReference.StartMultiplayerResponse StartMultiplayer(string deviceId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISpaceService/StartMultiplayer", ReplyAction="http://tempuri.org/ISpaceService/StartMultiplayerResponse")]
        System.Threading.Tasks.Task<SpaceOpponent.SpaceServiceReference.StartMultiplayerResponse> StartMultiplayerAsync(string deviceId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISpaceService/QuitLobby", ReplyAction="http://tempuri.org/ISpaceService/QuitLobbyResponse")]
        void QuitLobby(string deviceId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISpaceService/QuitLobby", ReplyAction="http://tempuri.org/ISpaceService/QuitLobbyResponse")]
        System.Threading.Tasks.Task QuitLobbyAsync(string deviceId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISpaceService/Tick", ReplyAction="http://tempuri.org/ISpaceService/TickResponse")]
        SpaceOpponent.SpaceServiceReference.TickResponse Tick(string deviceId, SpaceOpponent.SpaceServiceReference.Vector position, SpaceOpponent.SpaceServiceReference.Vector velocity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISpaceService/Tick", ReplyAction="http://tempuri.org/ISpaceService/TickResponse")]
        System.Threading.Tasks.Task<SpaceOpponent.SpaceServiceReference.TickResponse> TickAsync(string deviceId, SpaceOpponent.SpaceServiceReference.Vector position, SpaceOpponent.SpaceServiceReference.Vector velocity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISpaceService/Delay", ReplyAction="http://tempuri.org/ISpaceService/DelayResponse")]
        long Delay(long timestamp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISpaceService/Delay", ReplyAction="http://tempuri.org/ISpaceService/DelayResponse")]
        System.Threading.Tasks.Task<long> DelayAsync(long timestamp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISpaceService/ServerTime", ReplyAction="http://tempuri.org/ISpaceService/ServerTimeResponse")]
        long ServerTime();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISpaceService/ServerTime", ReplyAction="http://tempuri.org/ISpaceService/ServerTimeResponse")]
        System.Threading.Tasks.Task<long> ServerTimeAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISpaceService/Finish", ReplyAction="http://tempuri.org/ISpaceService/FinishResponse")]
        void Finish(string deviceId, int score);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISpaceService/Finish", ReplyAction="http://tempuri.org/ISpaceService/FinishResponse")]
        System.Threading.Tasks.Task FinishAsync(string deviceId, int score);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISpaceService/Result", ReplyAction="http://tempuri.org/ISpaceService/ResultResponse")]
        string Result(string deviceId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISpaceService/Result", ReplyAction="http://tempuri.org/ISpaceService/ResultResponse")]
        System.Threading.Tasks.Task<string> ResultAsync(string deviceId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISpaceService/Lobby", ReplyAction="http://tempuri.org/ISpaceService/LobbyResponse")]
        string[] Lobby();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISpaceService/Lobby", ReplyAction="http://tempuri.org/ISpaceService/LobbyResponse")]
        System.Threading.Tasks.Task<string[]> LobbyAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISpaceService/Matches", ReplyAction="http://tempuri.org/ISpaceService/MatchesResponse")]
        SpaceOpponent.SpaceServiceReference.Match[] Matches();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISpaceService/Matches", ReplyAction="http://tempuri.org/ISpaceService/MatchesResponse")]
        System.Threading.Tasks.Task<SpaceOpponent.SpaceServiceReference.Match[]> MatchesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISpaceService/Reset", ReplyAction="http://tempuri.org/ISpaceService/ResetResponse")]
        void Reset();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISpaceService/Reset", ReplyAction="http://tempuri.org/ISpaceService/ResetResponse")]
        System.Threading.Tasks.Task ResetAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISpaceServiceChannel : SpaceOpponent.SpaceServiceReference.ISpaceService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SpaceServiceClient : System.ServiceModel.ClientBase<SpaceOpponent.SpaceServiceReference.ISpaceService>, SpaceOpponent.SpaceServiceReference.ISpaceService {
        
        public SpaceServiceClient() {
        }
        
        public SpaceServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SpaceServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SpaceServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SpaceServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void SetName(string deviceId, string name) {
            base.Channel.SetName(deviceId, name);
        }
        
        public System.Threading.Tasks.Task SetNameAsync(string deviceId, string name) {
            return base.Channel.SetNameAsync(deviceId, name);
        }
        
        public void UploadHighScore(string deviceId, int score) {
            base.Channel.UploadHighScore(deviceId, score);
        }
        
        public System.Threading.Tasks.Task UploadHighScoreAsync(string deviceId, int score) {
            return base.Channel.UploadHighScoreAsync(deviceId, score);
        }
        
        public SpaceOpponent.SpaceServiceReference.HighScoreDTO[] HighScores() {
            return base.Channel.HighScores();
        }
        
        public System.Threading.Tasks.Task<SpaceOpponent.SpaceServiceReference.HighScoreDTO[]> HighScoresAsync() {
            return base.Channel.HighScoresAsync();
        }
        
        public SpaceOpponent.SpaceServiceReference.StartMultiplayerResponse StartMultiplayer(string deviceId) {
            return base.Channel.StartMultiplayer(deviceId);
        }
        
        public System.Threading.Tasks.Task<SpaceOpponent.SpaceServiceReference.StartMultiplayerResponse> StartMultiplayerAsync(string deviceId) {
            return base.Channel.StartMultiplayerAsync(deviceId);
        }
        
        public void QuitLobby(string deviceId) {
            base.Channel.QuitLobby(deviceId);
        }
        
        public System.Threading.Tasks.Task QuitLobbyAsync(string deviceId) {
            return base.Channel.QuitLobbyAsync(deviceId);
        }
        
        public SpaceOpponent.SpaceServiceReference.TickResponse Tick(string deviceId, SpaceOpponent.SpaceServiceReference.Vector position, SpaceOpponent.SpaceServiceReference.Vector velocity) {
            return base.Channel.Tick(deviceId, position, velocity);
        }
        
        public System.Threading.Tasks.Task<SpaceOpponent.SpaceServiceReference.TickResponse> TickAsync(string deviceId, SpaceOpponent.SpaceServiceReference.Vector position, SpaceOpponent.SpaceServiceReference.Vector velocity) {
            return base.Channel.TickAsync(deviceId, position, velocity);
        }
        
        public long Delay(long timestamp) {
            return base.Channel.Delay(timestamp);
        }
        
        public System.Threading.Tasks.Task<long> DelayAsync(long timestamp) {
            return base.Channel.DelayAsync(timestamp);
        }
        
        public long ServerTime() {
            return base.Channel.ServerTime();
        }
        
        public System.Threading.Tasks.Task<long> ServerTimeAsync() {
            return base.Channel.ServerTimeAsync();
        }
        
        public void Finish(string deviceId, int score) {
            base.Channel.Finish(deviceId, score);
        }
        
        public System.Threading.Tasks.Task FinishAsync(string deviceId, int score) {
            return base.Channel.FinishAsync(deviceId, score);
        }
        
        public string Result(string deviceId) {
            return base.Channel.Result(deviceId);
        }
        
        public System.Threading.Tasks.Task<string> ResultAsync(string deviceId) {
            return base.Channel.ResultAsync(deviceId);
        }
        
        public string[] Lobby() {
            return base.Channel.Lobby();
        }
        
        public System.Threading.Tasks.Task<string[]> LobbyAsync() {
            return base.Channel.LobbyAsync();
        }
        
        public SpaceOpponent.SpaceServiceReference.Match[] Matches() {
            return base.Channel.Matches();
        }
        
        public System.Threading.Tasks.Task<SpaceOpponent.SpaceServiceReference.Match[]> MatchesAsync() {
            return base.Channel.MatchesAsync();
        }
        
        public void Reset() {
            base.Channel.Reset();
        }
        
        public System.Threading.Tasks.Task ResetAsync() {
            return base.Channel.ResetAsync();
        }
    }
}
